# CS4760 Project 3: Semaphores and Message Passing

##### DESCRIPTION
This program separates a list of strings (up to 20 lines), from a file, into 2 other files, and
logs its execution. For each string, it will check if it's a palindrome. Strings that are palindromes
are written to "palin.out", otherwise "nopalin.out". Program execution is logged to "output.log".
Regarding the input file, each line should contain a single string, up to 255 characters, consisting
of only letters and numbers (no special characters or spaces).

Input:
- Maximum number of concurrent processes allowed (s).
- Maximum time allowed for program to execute (t).
- A list of alphanumeric strings in a text file (infile).

Output:
- A file (output.log) containing information of the the program's execution.
- A file (palin.out) containing palindromes (from the input file) and program information.
- A file (nopalin.out) containing non-palindromes (from the input file) and program information.

##### BUILD
make

##### EXECUTION
./master -h
./master [-s x] [-t time] infile

Nice to know:
- see all your shared memory segments: ipcs -m | grep $USER
- see all your semaphore arrays: ipcs -s | grep $USER
- remove all your shared memory segments: ipcrm -m | grep $USER | awk ' { print $2 } ' | xargs ipcrm shm
- remove all your semaphore arrays: ipcs -s | grep $USER | awk ' { print $2 } ' | xargs ipcrm sem
- kill all your processes: pkill -u $USER

##### ADJUSTMENTS
- Didn't implement a shared clock (Approved)
- Added new files to improve modularity

##### CHANGELOG

